version: "3"

services:
  frontend:
    build:
      context: client
    container_name: client-container
    tty: true
    volumes:
      - ./client:/client
      - front_node_modules:/client/node_modules
    ports:
      - 3000:3000
    networks:
      # app_net:
      aws_network:
        ipv4_address: 172.30.1.5
    environment:
      - WATCHPACK_POLLING=true

  backend-web-api:
    build:
      context: ./backend/api-server/
    container_name: web-api-back
    tty: true
    volumes:
      - ./backend/api-server:/src/api-server
      - static_volume:/app/share/static
      - media_volume:/app/share/media
    command: >
       sh -c "sh build_dev.sh"
    ports:
      - 8000:8000
    networks:
      aws_network:
        ipv4_address: 172.30.1.3


networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24

  aws_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.1.0/24

volumes:
  front_node_modules:
  static_volume:
  media_volume: